name: Nix index

on:
  workflow_dispatch:
  schedule:
    - cron: '0 4 * * 1,4'

jobs:
  update-lock:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
    - uses: actions/checkout@v4
    - uses: cachix/install-nix-action@v30
      with:
        nix_path: nixpkgs=https://github.com/NixOS/nixpkgs/archive/nixpkgs-unstable.tar.gz
    - run: |
        git config --local user.email "github-actions[bot]@users.noreply.github.com"
        git config --local user.name "github-actions[bot]"
    - run: nix flake update --commit-lock-file
    - run: git pull --rebase=true origin main
    - run: git push origin HEAD:main

  create-release:
    runs-on: ubuntu-latest
    needs: update-lock
    permissions:
      contents: write
    outputs:
      release_name: ${{ steps.date.outputs.date }}
    steps:
    - id: date
      run: echo "date=$(date '+%Y-%m-%d')" >>"$GITHUB_OUTPUT"
    - uses: softprops/action-gh-release@v2
      with:
        name: Release ${{ steps.date.outputs.date }}
        tag_name: ${{ steps.date.outputs.date }}
  
  generate-index:
    runs-on: ubuntu-latest
    needs: create-release
    strategy:
      matrix:
        system: [ 'x86_64-linux', 'aarch64-linux', 'x86_64-darwin', 'aarch64-darwin' ]
    permissions:
      contents: write
    outputs:
      x86_64-linux-index: ${{ steps.hash.outputs.x86_64-linux-index }}
      x86_64-darwin-index: ${{ steps.hash.outputs.x86_64-darwin-index }}
      aarch64-linux-index: ${{ steps.hash.outputs.aarch64-linux-index }}
      aarch64-darwin-index: ${{ steps.hash.outputs.aarch64-darwin-index }}
    steps:
    - uses: actions/checkout@v4
    - uses: cachix/install-nix-action@v30
      with:
        nix_path: nixpkgs=https://github.com/NixOS/nixpkgs/archive/nixpkgs-unstable.tar.gz
    - uses: DeterminateSystems/magic-nix-cache-action@v8
    - run: |
        nix shell --inputs-from . nixpkgs#nix-index -c \
          nix-index --db ./nix-index --system ${{ matrix.system }} \
          2>&1 | grep -F -v '+ generating index:'
    - id: hash
      run: echo ${{ matrix.system }}-index=$(nix hash path nix-index) >>"$GITHUB_OUTPUT"
    - run: mv nix-index/files index-${{ matrix.system }}
    - uses: softprops/action-gh-release@v2
      with:
        tag_name: ${{ needs.create-release.outputs.release_name }}
        files: index-${{ matrix.system }}

  generate-channel-index:
    runs-on: ubuntu-latest
    needs: create-release
    strategy:
      matrix:
        system: [ 'x86_64-linux', 'aarch64-linux', 'x86_64-darwin', 'aarch64-darwin' ]
    permissions:
      contents: write
    outputs:
      x86_64-linux-programs: ${{ steps.hash.outputs.x86_64-linux-programs }}
      x86_64-linux-debug: ${{ steps.hash.outputs.x86_64-linux-debug }}
      x86_64-darwin-programs: ${{ steps.hash.outputs.x86_64-darwin-programs }}
      x86_64-darwin-debug: ${{ steps.hash.outputs.x86_64-darwin-debug }}
      aarch64-linux-programs: ${{ steps.hash.outputs.aarch64-linux-programs }}
      aarch64-linux-debug: ${{ steps.hash.outputs.aarch64-linux-debug }}
      aarch64-darwin-programs: ${{ steps.hash.outputs.aarch64-darwin-programs }}
      aarch64-darwin-debug: ${{ steps.hash.outputs.aarch64-darwin-debug }}
    steps:
    - uses: actions/checkout@v4
    - uses: cachix/install-nix-action@v30
      with:
        nix_path: nixpkgs=https://github.com/NixOS/nixpkgs/archive/nixpkgs-unstable.tar.gz
    - uses: DeterminateSystems/magic-nix-cache-action@v8
    - run: |
        nix shell --inputs-from . nixpkgs#nix-index -c \
          nix-channel-index \
          --output programs-${{ matrix.system }}.sqlite \
          --debug-output debug-${{ matrix.system }}.sqlite \
          --platform ${{ matrix.system }} \
          2>&1 | grep -F -v '+ generating index:'
    - id: hash
      run: |
        cat >>"$GITHUB_OUTPUT" <<EOF
        ${{ matrix.system }}-programs=$(nix hash file programs-${{ matrix.system }}.sqlite)
        ${{ matrix.system }}-debug=$(nix hash file debug-${{ matrix.system }}.sqlite)
        EOF
    - uses: softprops/action-gh-release@v2
      with:
        tag_name: ${{ needs.create-release.outputs.release_name }}
        files: |
          programs-${{ matrix.system }}.sqlite
          debug-${{ matrix.system }}.sqlite

  update-flake:
    runs-on: ubuntu-latest
    needs: [ 'create-release', 'generate-index', 'generate-channel-index' ]
    permissions:
      contents: write
    steps:
    - uses: actions/checkout@v4
    - uses: cachix/install-nix-action@v30
      with:
        nix_path: nixpkgs=https://github.com/NixOS/nixpkgs/archive/nixpkgs-unstable.tar.gz
    - uses: DeterminateSystems/magic-nix-cache-action@v8
    - run: |
        cat >generated.nix <<EOF
        {
          url = "https://github.com/${{ github.repository }}/releases/download/${{ needs.create-release.outputs.release_name }}";

          x86_64-linux = {
            index = "${{ needs.generate-index.outputs.x86_64-linux-index }}";
            programs = "${{ needs.generate-channel-index.outputs.x86_64-linux-programs }}";
            debug = "${{ needs.generate-channel-index.outputs.x86_64-linux-debug }}";
          };

          x86_64-darwin = {
            index = "${{ needs.generate-index.outputs.x86_64-darwin-index }}";
            programs = "${{ needs.generate-channel-index.outputs.x86_64-darwin-programs }}";
            debug = "${{ needs.generate-channel-index.outputs.x86_64-darwin-debug }}";
          };

          aarch64-linux = {
            index = "${{ needs.generate-index.outputs.aarch64-linux-index }}";
            programs = "${{ needs.generate-channel-index.outputs.aarch64-linux-programs }}";
            debug = "${{ needs.generate-channel-index.outputs.aarch64-linux-debug }}";
          };
          
          aarch64-darwin = {
            index = "${{ needs.generate-index.outputs.aarch64-darwin-index }}";
            programs = "${{ needs.generate-channel-index.outputs.aarch64-darwin-programs }}";
            debug = "${{ needs.generate-channel-index.outputs.aarch64-darwin-debug }}";
          };
        }
        EOF
    - run: nix flake show --all-systems
    - run: nix flake check --all-systems --no-build
    - run: |
        if [[ "$(git status --porcelain)" != "" ]]; then
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add generated.nix
          git commit -m "Update release information"
          git pull --rebase=true origin main
          git push origin HEAD:main
        fi
